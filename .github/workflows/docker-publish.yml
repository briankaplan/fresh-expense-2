name: Docker Build and Push

# Workflow for building and pushing Docker images
on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/docker-publish.yml'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/docker-publish.yml'
      - 'pnpm-lock.yaml'
  workflow_dispatch: # Allow manual triggering

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend
  DOCKER_BUILDKIT: 1 # Enable BuildKit for better caching

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for better caching

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4

      - name: Set up Node.js
        uses: actions/setup-node@v4
      - name: Install pnpm
        run: npm install -g pnpm
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Set PNPM_HOME
        run: |
          echo "PNPM_HOME=$HOME/.local/share/pnpm" >> $GITHUB_ENV
          echo "$HOME/.local/share/pnpm" >> $GITHUB_PATH

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
            type=sha,format=short
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Extract Docker metadata (Frontend)
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
            type=sha,format=short
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            PNPM_VERSION=8.15.4

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            PNPM_VERSION=8.15.4

      - name: Generate SBOM for backend
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
          format: spdx-json
          output-file: backend-sbom.json

      - name: Generate SBOM for frontend
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
          format: spdx-json
          output-file: frontend-sbom.json

      - name: Upload SBOM results
        uses: actions/upload-artifact@v4
        with:
          name: sbom-results
          path: |
            backend-sbom.json
            frontend-sbom.json
          retention-days: 7
