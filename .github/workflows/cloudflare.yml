name: Cloudflare Deployment

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - 'packages/**'
      - '.github/workflows/cloudflare.yml'
      - 'pnpm-lock.yaml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/**'
      - 'packages/**'
      - '.github/workflows/cloudflare.yml'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

env:
  NODE_VERSION: '20.11.1'
  PNPM_VERSION: '8.15.4'

permissions:
  contents: read
  deployments: write

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check for required secrets
        run: |
          # Cloudflare Secrets
          if [ -z "${{ secrets.PROD_CLOUDFLARE_API_TOKEN }}" ]; then
            echo "Error: PROD_CLOUDFLARE_API_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "Error: PROD_CLOUDFLARE_ACCOUNT_ID is not set"
            exit 1
          fi

          # Application Secrets
          if [ -z "${{ secrets.PROD_JWT_SECRET }}" ]; then
            echo "Error: PROD_JWT_SECRET is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_ENCRYPTION_KEY }}" ]; then
            echo "Error: PROD_ENCRYPTION_KEY is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_ENCRYPTION_IV }}" ]; then
            echo "Error: PROD_ENCRYPTION_IV is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_MONGODB_URI }}" ]; then
            echo "Error: PROD_MONGODB_URI is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_API_URL }}" ]; then
            echo "Error: PROD_API_URL is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PROD_R2_PUBLIC_URL }}" ]; then
            echo "Error: PROD_R2_PUBLIC_URL is not set"
            exit 1
          fi

          echo "All required secrets are present"

  deploy-frontend:
    needs: validate-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build:frontend
        env:
          API_URL: ${{ secrets.PROD_API_URL }}
          R2_PUBLIC_URL: ${{ secrets.PROD_R2_PUBLIC_URL }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.PROD_CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.PROD_CLOUDFLARE_ACCOUNT_ID }}
          projectName: expense-frontend
          directory: dist/apps/frontend
          branch: main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-backend:
    needs: validate-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Build backend
        run: pnpm build:backend
        env:
          JWT_SECRET: ${{ secrets.PROD_JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.PROD_ENCRYPTION_KEY }}
          ENCRYPTION_IV: ${{ secrets.PROD_ENCRYPTION_IV }}
          MONGODB_URI: ${{ secrets.PROD_MONGODB_URI }}
          API_URL: ${{ secrets.PROD_API_URL }}
          R2_PUBLIC_URL: ${{ secrets.PROD_R2_PUBLIC_URL }}
          GMAIL_CLIENT_ID_1: ${{ secrets.PROD_GMAIL_CLIENT_ID_1 }}
          GMAIL_CLIENT_SECRET_1: ${{ secrets.PROD_GMAIL_CLIENT_SECRET_1 }}
          GMAIL_REFRESH_TOKEN_1: ${{ secrets.PROD_GMAIL_REFRESH_TOKEN_1 }}
          GOOGLE_REDIRECT_URI_1: ${{ secrets.PROD_GOOGLE_REDIRECT_URI_1 }}
          GMAIL_CLIENT_ID_2: ${{ secrets.PROD_GMAIL_CLIENT_ID_2 }}
          GMAIL_CLIENT_SECRET_2: ${{ secrets.PROD_GMAIL_CLIENT_SECRET_2 }}
          GMAIL_REFRESH_TOKEN_2: ${{ secrets.PROD_GMAIL_REFRESH_TOKEN_2 }}
          GOOGLE_REDIRECT_URI_2: ${{ secrets.PROD_GOOGLE_REDIRECT_URI_2 }}
          GOOGLE_PHOTOS_REDIRECT_URI: ${{ secrets.PROD_GOOGLE_PHOTOS_REDIRECT_URI }}
          R2_ACCOUNT_ID: ${{ secrets.PROD_R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.PROD_R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.PROD_R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.PROD_R2_BUCKET_NAME }}
          TELLER_APPLICATION_ID: ${{ secrets.PROD_TELLER_APPLICATION_ID }}
          TELLER_SIGNING_SECRET: ${{ secrets.PROD_TELLER_SIGNING_SECRET }}
          TELLER_SIGNING_KEY: ${{ secrets.PROD_TELLER_SIGNING_KEY }}
          HUGGINGFACE_API_TOKEN: ${{ secrets.PROD_HUGGINGFACE_API_TOKEN }}
          HUGGINGFACE_OCR_TOKEN: ${{ secrets.PROD_HUGGINGFACE_OCR_TOKEN }}
          SENDGRID_API_KEY: ${{ secrets.PROD_SENDGRID_API_KEY }}
          RECEIPT_EMAIL: ${{ secrets.PROD_RECEIPT_EMAIL }}

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.PROD_CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.PROD_CLOUDFLARE_ACCOUNT_ID }}
          command: publish
          workingDirectory: apps/backend
          environment: production
