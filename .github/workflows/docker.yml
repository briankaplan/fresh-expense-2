name: Docker Build and Push

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NODE_ENV: production

permissions:
  contents: read
  packages: write
  actions: read
  id-token: write

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
          GMAIL_CLIENT_ID_1: ${{ secrets.GMAIL_CLIENT_ID_1 }}
          GMAIL_CLIENT_SECRET_1: ${{ secrets.GMAIL_CLIENT_SECRET_1 }}
          GMAIL_REFRESH_TOKEN_1: ${{ secrets.GMAIL_REFRESH_TOKEN_1 }}
          GOOGLE_REDIRECT_URI_1: ${{ secrets.GOOGLE_REDIRECT_URI_1 }}
          GMAIL_CLIENT_ID_2: ${{ secrets.GMAIL_CLIENT_ID_2 }}
          GMAIL_CLIENT_SECRET_2: ${{ secrets.GMAIL_CLIENT_SECRET_2 }}
          GMAIL_REFRESH_TOKEN_2: ${{ secrets.GMAIL_REFRESH_TOKEN_2 }}
          GOOGLE_REDIRECT_URI_2: ${{ secrets.GOOGLE_REDIRECT_URI_2 }}
          GOOGLE_PHOTOS_REDIRECT_URI: ${{ secrets.GOOGLE_PHOTOS_REDIRECT_URI }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_PUBLIC_URL: ${{ secrets.R2_PUBLIC_URL }}
          TELLER_APPLICATION_ID: ${{ secrets.TELLER_APPLICATION_ID }}
          TELLER_SIGNING_SECRET: ${{ secrets.TELLER_SIGNING_SECRET }}
          TELLER_SIGNING_KEY: ${{ secrets.TELLER_SIGNING_KEY }}
          HUGGINGFACE_API_TOKEN: ${{ secrets.HUGGINGFACE_API_TOKEN }}
          HUGGINGFACE_OCR_TOKEN: ${{ secrets.HUGGINGFACE_OCR_TOKEN }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          RECEIPT_EMAIL: ${{ secrets.RECEIPT_EMAIL }}
          API_URL: ${{ secrets.API_URL }}
          STORAGE_URL: ${{ secrets.STORAGE_URL }}
        run: |
          missing_secrets=()
          for var in $(env | grep -v '^_'); do
            if [ -z "${!var}" ]; then
              missing_secrets+=("$var")
            fi
          done
          if [ ${#missing_secrets[@]} -ne 0 ]; then
            echo "Error: The following required secrets are missing:"
            printf '%s\n' "${missing_secrets[@]}"
            exit 1
          fi

  build-and-push:
    needs: validate-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
            ENCRYPTION_IV=${{ secrets.ENCRYPTION_IV }}
            GMAIL_CLIENT_ID_1=${{ secrets.GMAIL_CLIENT_ID_1 }}
            GMAIL_CLIENT_SECRET_1=${{ secrets.GMAIL_CLIENT_SECRET_1 }}
            GMAIL_REFRESH_TOKEN_1=${{ secrets.GMAIL_REFRESH_TOKEN_1 }}
            GOOGLE_REDIRECT_URI_1=${{ secrets.GOOGLE_REDIRECT_URI_1 }}
            GMAIL_CLIENT_ID_2=${{ secrets.GMAIL_CLIENT_ID_2 }}
            GMAIL_CLIENT_SECRET_2=${{ secrets.GMAIL_CLIENT_SECRET_2 }}
            GMAIL_REFRESH_TOKEN_2=${{ secrets.GMAIL_REFRESH_TOKEN_2 }}
            GOOGLE_REDIRECT_URI_2=${{ secrets.GOOGLE_REDIRECT_URI_2 }}
            GOOGLE_PHOTOS_REDIRECT_URI=${{ secrets.GOOGLE_PHOTOS_REDIRECT_URI }}
            R2_ACCOUNT_ID=${{ secrets.R2_ACCOUNT_ID }}
            R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}
            R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}
            R2_BUCKET_NAME=${{ secrets.R2_BUCKET_NAME }}
            R2_PUBLIC_URL=${{ secrets.R2_PUBLIC_URL }}
            TELLER_APPLICATION_ID=${{ secrets.TELLER_APPLICATION_ID }}
            TELLER_SIGNING_SECRET=${{ secrets.TELLER_SIGNING_SECRET }}
            TELLER_SIGNING_KEY=${{ secrets.TELLER_SIGNING_KEY }}
            HUGGINGFACE_API_TOKEN=${{ secrets.HUGGINGFACE_API_TOKEN }}
            HUGGINGFACE_OCR_TOKEN=${{ secrets.HUGGINGFACE_OCR_TOKEN }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
            RECEIPT_EMAIL=${{ secrets.RECEIPT_EMAIL }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
            API_URL=${{ secrets.API_URL }}
            STORAGE_URL=${{ secrets.STORAGE_URL }}
