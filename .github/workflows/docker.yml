name: Docker Build and Push

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-api
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend
  NODE_VERSION: '20.x'
  PNPM_VERSION: '8.15.4'

permissions:
  contents: read
  packages: write

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          missing_secrets=()

          # Check for required secrets
          [ -z "${{ secrets.JWT_SECRET }}" ] && missing_secrets+=("JWT_SECRET")
          [ -z "${{ secrets.ENCRYPTION_KEY }}" ] && missing_secrets+=("ENCRYPTION_KEY")
          [ -z "${{ secrets.GMAIL_CLIENT_ID_1 }}" ] && missing_secrets+=("GMAIL_CLIENT_ID_1")
          [ -z "${{ secrets.GMAIL_CLIENT_SECRET_1 }}" ] && missing_secrets+=("GMAIL_CLIENT_SECRET_1")
          [ -z "${{ secrets.GMAIL_REFRESH_TOKEN_1 }}" ] && missing_secrets+=("GMAIL_REFRESH_TOKEN_1")
          [ -z "${{ secrets.GMAIL_CLIENT_ID_2 }}" ] && missing_secrets+=("GMAIL_CLIENT_ID_2")
          [ -z "${{ secrets.GMAIL_CLIENT_SECRET_2 }}" ] && missing_secrets+=("GMAIL_CLIENT_SECRET_2")
          [ -z "${{ secrets.GMAIL_REFRESH_TOKEN_2 }}" ] && missing_secrets+=("GMAIL_REFRESH_TOKEN_2")
          [ -z "${{ secrets.GMAIL_CLIENT_ID_3 }}" ] && missing_secrets+=("GMAIL_CLIENT_ID_3")
          [ -z "${{ secrets.GMAIL_CLIENT_SECRET_3 }}" ] && missing_secrets+=("GMAIL_CLIENT_SECRET_3")
          [ -z "${{ secrets.GMAIL_REFRESH_TOKEN_3 }}" ] && missing_secrets+=("GMAIL_REFRESH_TOKEN_3")
          [ -z "${{ secrets.GMAIL_CLIENT_ID_4 }}" ] && missing_secrets+=("GMAIL_CLIENT_ID_4")
          [ -z "${{ secrets.GMAIL_CLIENT_SECRET_4 }}" ] && missing_secrets+=("GMAIL_CLIENT_SECRET_4")
          [ -z "${{ secrets.GMAIL_REFRESH_TOKEN_4 }}" ] && missing_secrets+=("GMAIL_REFRESH_TOKEN_4")
          [ -z "${{ secrets.GMAIL_CLIENT_ID_5 }}" ] && missing_secrets+=("GMAIL_CLIENT_ID_5")
          [ -z "${{ secrets.GMAIL_CLIENT_SECRET_5 }}" ] && missing_secrets+=("GMAIL_CLIENT_SECRET_5")
          [ -z "${{ secrets.GMAIL_REFRESH_TOKEN_5 }}" ] && missing_secrets+=("GMAIL_REFRESH_TOKEN_5")

          if [ ${#missing_secrets[@]} -ne 0 ]; then
            echo "Error: The following required secrets are missing:"
            printf '%s\n' "${missing_secrets[@]}"
            exit 1
          fi

          echo "All required secrets are present."

  build-and-push:
    needs: validate-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: |
          pnpm nx build shared
          pnpm nx build backend
          pnpm nx build frontend
        env:
          NODE_ENV: production
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GMAIL_CLIENT_ID_1: ${{ secrets.GMAIL_CLIENT_ID_1 }}
          GMAIL_CLIENT_SECRET_1: ${{ secrets.GMAIL_CLIENT_SECRET_1 }}
          GMAIL_REFRESH_TOKEN_1: ${{ secrets.GMAIL_REFRESH_TOKEN_1 }}
          GMAIL_CLIENT_ID_2: ${{ secrets.GMAIL_CLIENT_ID_2 }}
          GMAIL_CLIENT_SECRET_2: ${{ secrets.GMAIL_CLIENT_SECRET_2 }}
          GMAIL_REFRESH_TOKEN_2: ${{ secrets.GMAIL_REFRESH_TOKEN_2 }}
          GMAIL_CLIENT_ID_3: ${{ secrets.GMAIL_CLIENT_ID_3 }}
          GMAIL_CLIENT_SECRET_3: ${{ secrets.GMAIL_CLIENT_SECRET_3 }}
          GMAIL_REFRESH_TOKEN_3: ${{ secrets.GMAIL_REFRESH_TOKEN_3 }}
          GMAIL_CLIENT_ID_4: ${{ secrets.GMAIL_CLIENT_ID_4 }}
          GMAIL_CLIENT_SECRET_4: ${{ secrets.GMAIL_CLIENT_SECRET_4 }}
          GMAIL_REFRESH_TOKEN_4: ${{ secrets.GMAIL_REFRESH_TOKEN_4 }}
          GMAIL_CLIENT_ID_5: ${{ secrets.GMAIL_CLIENT_ID_5 }}
          GMAIL_CLIENT_SECRET_5: ${{ secrets.GMAIL_CLIENT_SECRET_5 }}
          GMAIL_REFRESH_TOKEN_5: ${{ secrets.GMAIL_REFRESH_TOKEN_5 }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for API
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: apps/backend
          file: ./apps/backend/Dockerfile
          push: true
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
            GMAIL_CLIENT_ID_1=${{ secrets.GMAIL_CLIENT_ID_1 }}
            GMAIL_CLIENT_SECRET_1=${{ secrets.GMAIL_CLIENT_SECRET_1 }}
            GMAIL_REFRESH_TOKEN_1=${{ secrets.GMAIL_REFRESH_TOKEN_1 }}
            GMAIL_CLIENT_ID_2=${{ secrets.GMAIL_CLIENT_ID_2 }}
            GMAIL_CLIENT_SECRET_2=${{ secrets.GMAIL_CLIENT_SECRET_2 }}
            GMAIL_REFRESH_TOKEN_2=${{ secrets.GMAIL_REFRESH_TOKEN_2 }}
            GMAIL_CLIENT_ID_3=${{ secrets.GMAIL_CLIENT_ID_3 }}
            GMAIL_CLIENT_SECRET_3=${{ secrets.GMAIL_CLIENT_SECRET_3 }}
            GMAIL_REFRESH_TOKEN_3=${{ secrets.GMAIL_REFRESH_TOKEN_3 }}
            GMAIL_CLIENT_ID_4=${{ secrets.GMAIL_CLIENT_ID_4 }}
            GMAIL_CLIENT_SECRET_4=${{ secrets.GMAIL_CLIENT_SECRET_4 }}
            GMAIL_REFRESH_TOKEN_4=${{ secrets.GMAIL_REFRESH_TOKEN_4 }}
            GMAIL_CLIENT_ID_5=${{ secrets.GMAIL_CLIENT_ID_5 }}
            GMAIL_CLIENT_SECRET_5=${{ secrets.GMAIL_CLIENT_SECRET_5 }}
            GMAIL_REFRESH_TOKEN_5=${{ secrets.GMAIL_REFRESH_TOKEN_5 }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: apps/frontend
          file: ./apps/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
